#include <bits/stdc++.h>
using namespace std;
#define rep(i,n) for (int i = 0; i < (n); ++i)
using ll = long long;

// 四方向への移動ベクトル
const int dx[4] = {1, 0, -1, 0};
const int dy[4] = {0, 1, 0, -1};

int main(void){
    // Your code here!
    int R,C;cin>>R>>C;
    int Sx,Sy;cin>>Sy>>Sx;Sx--,Sy--;
    int Gx,Gy;cin>>Gy>>Gx;Gx--,Gy--;
    vector<string> field(R);
    rep(i,R) cin>>field[i];
    
    //各マスの最短距離を表現する。未探索は-1。
    vector<vector<int>> dist(R,vector<int>(C,-1));
    dist[Sy][Sx]=0;
    queue<pair<int,int>> q;
    q.push(make_pair(Sy,Sx));
    
    while(!q.empty()){
        pair<int,int> v=q.front();q.pop();
        //cout<<v.first<<","<<v.second<<endl;
        for(int dir=0;dir<4;dir++){
            int nh=v.first+dy[dir];
            int nw=v.second+dx[dir];
            
            if (nh < 0 || nh >= R || nw < 0 || nw >= C) continue;
            if (field[nh][nw] == '#') continue;
            
            // 移動先が探索済みの場合
            if (dist[nh][nw]!=-1) continue;
            q.push(make_pair(nh,nw));
            dist[nh][nw]=dist[v.first][v.second]+1;
        }
        
    }
    
    cout<<dist[Gy][Gx]<<endl;;
}
