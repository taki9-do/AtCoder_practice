#include <bits/stdc++.h>
#define rep(i,n) for (int i = 0; i < (n); ++i)
using namespace std;
using ll = long long;
int main(void){
    // Your code here!
    ll N;cin>>N;
    vector<ll> A(N);
    rep(i,N) cin>>A[i];
    
    //ユークリッドの互除法で最大公約数を求められれば、
    //簡単に以下の性質を利用して最小公倍数を求めることができる。
    //A*B=(AとBの最大公約数)*(AとBの最小公倍数)
    
    ll ans=A[0];
    rep(i,N-1){
        ll a=ans,b=A[i+1],x;
        ll R_a=a,R_b=b;
        while(a>=1&&b>=1){
            if(a<b) b=b%a;
            else a=a%b;
            //cout<<"A:"<<A<<",B:"<<B<<endl;
        }
        if(a>=1) x=a;
        else x=b;
        //もしR_a*R_bが10^18を超えたらオーバーフローする
        ans=(R_a/x)*R_b;
    }
    
    cout<<ans<<endl;
    
}
